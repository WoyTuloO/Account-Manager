/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.accountmanager;

import java.awt.Point;
import java.io.File;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author wojte
 */
public class AccountManagerFrame extends javax.swing.JFrame {

    /**
     * Creates new form AccountManagerFrame
     */
    javax.swing.JFrame addFrame;
   
    
    
    
    public AccountManagerFrame() {
        pathGenerator();
        initComponents();
        initTab();
    }
    
    public void initTab(){
        
        TableBackupManagement.initialImport(Table);
        
    }
    public void pathGenerator(){
        String folderPath = System.getProperty("user.home") + "/Documents/AccMgr";
        File folder = new File(folderPath);

        if (!folder.exists()) {
            if (folder.mkdirs()) {
                System.out.println("Folder created successfully.");
            } else {
                System.err.println("Failed to create folder.");
                return;
            }
        }
        
    }
    public TableActionEvt evt = new TableActionEvt(){
            @Override
            public void edit(int row){
                String[] obj = new String[]{
                                            (String) Table.getValueAt(row, 0), 
                                            (String) Table.getValueAt(row, 1), 
                                            (String) Table.getValueAt(row, 2), 
                                            (String) Table.getValueAt(row, 3)
                                        };          
                DataStore.getInstance().setSharedData(obj);
                
                new EditAccFrame().setVisible(true);
                ThreadControl.getInstance().setStatus(true);
                new Thread(() ->{
                    while((boolean) ThreadControl.getInstance().getStatus()){
                        Object sharedData = DataStore.getInstance().getSharedData();
                        System.out.println((boolean) ThreadControl.getInstance().getStatus());
                        System.out.println(true);
                        if (sharedData != null) {
                            DefaultTableModel tableModel = (DefaultTableModel) Table.getModel();
                            String[] toTable = (String[]) sharedData;
                            System.out.println(toTable);
                            tableModel.insertRow(row ,new Object[]{toTable[0], toTable[1], toTable[2], toTable[3] /*, new ActionPanel()*/});
                            tableModel.removeRow(row+1);
                            tableModel.fireTableDataChanged();
                            DataStore.getInstance().setSharedData(null);
                            ThreadControl.getInstance().setStatus(false);
                            System.out.println(false);
                            break;
                        }
                        try {
                            Thread.sleep(100);
                        } catch (InterruptedException e) {
                            e.printStackTrace();
                        }
                    }
                
                }).start();
                
            };
            
            @Override
            public void remove(int row){
                if(Table.isEditing()) Table.getCellEditor().stopCellEditing();
                DefaultTableModel tableModel = (DefaultTableModel)Table.getModel();
                
                if(tableModel.getRowCount() == 1) tableModel.setRowCount(0);
                else if(tableModel.getRowCount()>1){
                    tableModel.removeRow(row);
                    tableModel.fireTableDataChanged();
                    }
                System.out.println("Removed a row: " + row);
                
            };
                
            
            };
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        background = new javax.swing.JPanel();
        SidePanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        importSaveButton = new javax.swing.JButton();
        addAccountButton = new javax.swing.JButton();
        exportSaveButton = new javax.swing.JButton();
        searchTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 827, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("WoyTuloo`s Account Manager");
        setBackground(new java.awt.Color(255, 255, 255));
        setLocationByPlatform(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        background.setBackground(new java.awt.Color(255, 255, 255));

        SidePanel.setBackground(new java.awt.Color(102, 0, 255));
        SidePanel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                SidePanelMouseDragged(evt);
            }
        });
        SidePanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SidePanelMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                SidePanelMousePressed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(102, 0, 255));
        jLabel1.setFont(new java.awt.Font("Unispace", 3, 34)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel1.setText("Account Manager");
        jLabel1.setFocusable(false);

        importSaveButton.setFont(new java.awt.Font("Unispace", 3, 15)); // NOI18N
        importSaveButton.setForeground(new java.awt.Color(0, 0, 0));
        importSaveButton.setText("Restore Backup");
        importSaveButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        importSaveButton.setFocusPainted(false);
        importSaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importSaveButtonActionPerformed(evt);
            }
        });

        addAccountButton.setFont(new java.awt.Font("Unispace", 3, 20)); // NOI18N
        addAccountButton.setForeground(new java.awt.Color(0, 0, 0));
        addAccountButton.setText("Add Account");
        addAccountButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        addAccountButton.setFocusPainted(false);
        addAccountButton.setFocusable(false);
        addAccountButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAccountButtonActionPerformed(evt);
            }
        });

        exportSaveButton.setFont(new java.awt.Font("Unispace", 3, 15)); // NOI18N
        exportSaveButton.setForeground(new java.awt.Color(0, 0, 0));
        exportSaveButton.setText("Create Backup");
        exportSaveButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        exportSaveButton.setFocusPainted(false);
        exportSaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportSaveButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout SidePanelLayout = new javax.swing.GroupLayout(SidePanel);
        SidePanel.setLayout(SidePanelLayout);
        SidePanelLayout.setHorizontalGroup(
            SidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SidePanelLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(addAccountButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(50, 50, 50))
            .addGroup(SidePanelLayout.createSequentialGroup()
                .addGroup(SidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SidePanelLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel1))
                    .addGroup(SidePanelLayout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addComponent(importSaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(SidePanelLayout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addComponent(exportSaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        SidePanelLayout.setVerticalGroup(
            SidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SidePanelLayout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(jLabel1)
                .addGap(140, 140, 140)
                .addComponent(addAccountButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(importSaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(exportSaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(267, Short.MAX_VALUE))
        );

        searchTextField.setBackground(new java.awt.Color(102, 51, 255));
        searchTextField.setFont(new java.awt.Font("Unispace", 3, 18)); // NOI18N
        searchTextField.setForeground(new java.awt.Color(255, 255, 255));
        searchTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        searchTextField.setText("Input criteria");
        searchTextField.setBorder(null);
        searchTextField.setOpaque(true);
        searchTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                searchTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchTextFieldFocusLost(evt);
            }
        });
        searchTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTextFieldActionPerformed(evt);
            }
        });
        searchTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchTextFieldKeyReleased(evt);
            }
        });

        Table.setBackground(new java.awt.Color(255, 255, 255));
        Table.setFont(new java.awt.Font("Unispace", 3, 16)); // NOI18N
        Table.setForeground(new java.awt.Color(0, 0, 0));
        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Platform", "Login", "Password", "Rank", "Action"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Table.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        Table.setColumnSelectionAllowed(true);
        Table.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Table.setRowHeight(50);
        jScrollPane1.setViewportView(Table);
        Table.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (Table.getColumnModel().getColumnCount() > 0) {
            Table.getColumnModel().getColumn(0).setPreferredWidth(30);
            Table.getColumnModel().getColumn(1).setPreferredWidth(30);
            Table.getColumnModel().getColumn(2).setPreferredWidth(30);
            Table.getColumnModel().getColumn(3).setPreferredWidth(10);
            Table.getColumnModel().getColumn(4).setPreferredWidth(70);
            Table.getColumnModel().getColumn(4).setCellEditor(new TableActionCellRenderer2.TableActionCellEditor(evt));
            Table.getColumnModel().getColumn(4).setCellRenderer(new TableActionCellRenderer2());
        }

        javax.swing.GroupLayout backgroundLayout = new javax.swing.GroupLayout(background);
        background.setLayout(backgroundLayout);
        backgroundLayout.setHorizontalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundLayout.createSequentialGroup()
                .addComponent(SidePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 808, Short.MAX_VALUE)
                    .addComponent(searchTextField))
                .addGap(24, 24, 24))
        );
        backgroundLayout.setVerticalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 605, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(backgroundLayout.createSequentialGroup()
                .addComponent(SidePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 700));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void addAccountButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAccountButtonActionPerformed
        // TODO add your handling code here:
        addFrame = new AddNewAccFrame();
        addFrame.setVisible(true);
        ThreadControl.getInstance().setStatus(true);
        new Thread(() -> {
            while ((boolean) ThreadControl.getInstance().getStatus()) {
                Object sharedData = DataStore.getInstance().getSharedData();
                System.out.println((boolean) ThreadControl.getInstance().getStatus());
                if (sharedData != null) {
                    DefaultTableModel tableModel = (DefaultTableModel) Table.getModel();
                    String[] toTable = (String[]) sharedData;
                    tableModel.addRow(new Object[]{toTable[0], toTable[1], toTable[2], toTable[3]});
                    tableModel.fireTableDataChanged();
                    DataStore.getInstance().setSharedData(null);
                    ThreadControl.getInstance().setStatus(false);
                    System.out.println(false);
                    System.out.println(Table.getModel().getRowCount());
                    break;
                }

                try {
                    Thread.sleep(100);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
            }
        }).start();
        System.out.println(Table.getModel().getRowCount());

    }//GEN-LAST:event_addAccountButtonActionPerformed

    private void SidePanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SidePanelMousePressed
        this.currMousePressedCordMain = evt.getPoint();
    }//GEN-LAST:event_SidePanelMousePressed

    private void SidePanelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SidePanelMouseDragged
        Point currCord = evt.getLocationOnScreen();
        this.setLocation(currCord.x - currMousePressedCordMain.x, currCord.y - currMousePressedCordMain.y);
    }//GEN-LAST:event_SidePanelMouseDragged

    private void importSaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importSaveButtonActionPerformed
        TableBackupManagement.importBackup(Table);
    }//GEN-LAST:event_importSaveButtonActionPerformed

    private void exportSaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportSaveButtonActionPerformed
        DataStore.getInstance().setSharedData(Table);
        TableBackupManagement.exportBackup();
        
    }//GEN-LAST:event_exportSaveButtonActionPerformed

    private void searchTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTextFieldFocusGained
        if(searchTextField.getText().equals("Input criteria")) searchTextField.setText("");
    }//GEN-LAST:event_searchTextFieldFocusGained

    private void searchTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTextFieldFocusLost
        if(searchTextField.getText().equals("")) searchTextField.setText("Input criteria");
        this.requestFocusInWindow();
    }//GEN-LAST:event_searchTextFieldFocusLost

    private void SidePanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SidePanelMouseClicked
        this.requestFocusInWindow();
    }//GEN-LAST:event_SidePanelMouseClicked

    private void searchTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchTextFieldActionPerformed

    private void searchTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTextFieldKeyReleased
        DefaultTableModel model = (DefaultTableModel) Table.getModel();
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
        Table.setRowSorter(sorter);
        sorter.setRowFilter(RowFilter.regexFilter(searchTextField.getText()));
    }//GEN-LAST:event_searchTextFieldKeyReleased

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        DataStore.getInstance().setSharedData(Table);
        TableBackupManagement.exportSave();
        this.dispose();
    }//GEN-LAST:event_formWindowClosing
    
    /**
     * @param args the command line arguments
     */

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AccountManagerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AccountManagerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AccountManagerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AccountManagerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AccountManagerFrame().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel SidePanel;
    private javax.swing.JTable Table;
    private javax.swing.JButton addAccountButton;
    private javax.swing.JPanel background;
    private javax.swing.JButton exportSaveButton;
    private javax.swing.JButton importSaveButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField searchTextField;
    // End of variables declaration//GEN-END:variables
    private static Point currMousePressedCordMain;
}
